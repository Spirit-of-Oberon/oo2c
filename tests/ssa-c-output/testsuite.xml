<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE testsuite-ext
          SYSTEM "../../rsrc/OOC/TestFramework/testcases-ext.dtd">

<testsuite-ext
  profile="Test Suite for Framework Testing"
  select ="prepare_out_module var1 var2 var3 var3b var4 var4b">

  <testcases profile="Test Suite Setup" default-lang="O1 O2 AO">
    <test id="prepare_out_module" type="accept" file="../compile/src/Out.Mod">
      This is not a test case.  Rather, it prepares an Oakwood
      compliant module <code>Out</code> to supersede OOC's differing
      module of the same name.
    </test>
  </testcases>
  
  <testcases profile="OOC/SSA: Quality Check C Code" default-lang="O2">
    <test id="var1" type="run" file="Var1.Mod" output="Var1.Ref">
      Reading a variable with a known value: instead of accessing
      memory, the known value should be used, and the local variable
      <code>F.y</code> should not be read.
    </test>
    
    <test id="var2" type="run" file="Var2.Mod" output="Var2.Ref">
      Assignment masked by subsequent assignment to the same var.
      The first assignment should be discarded, but the second must survive.
    </test>
    
    <test id="var3" type="run" file="Var3.Mod" output="Var3.Ref">
      Return value is taken from a local variable that is set in an 
      <code>IF</code> statement.  The assignments should be converted
      from memory writes to register values.
    </test>
    
    <test id="var3b" type="run" file="Var3b.Mod" output="Var3b.Ref">
      Similar to the preceding test case, with the added complication
      of a nested <code>IF</code> statement.
    </test>
    
    <test id="var4" type="run" file="Var4.Mod" output="Var4.Ref">
      Return value is taken from a global variable that is set in an 
      <code>IF</code> statement.  The assignments should remain,
      because the changed variable is visible outside the procedure.
    </test>
    
    <test id="var4b" type="run" file="Var4b.Mod" output="Var4b.Ref">
      Similar to the preceding test case, with the added complication
      of a nested <code>IF</code> statement.
    </test>
    
  </testcases>
</testsuite-ext>
