Appendix C: The module SYSTEM

ADR(v)

ACCEPT

  1) ADR(some variable)
  2) ADR(string constant)  (check this with oo2c v1)
  3) address of variable parameter equals original address of argument

REJECT

  1) argument is a type
  2) v is a scalar constant


BIT(a,n)

ACCEPT

  Mh, this one is probably beyond testing.  Drop this function?

REJECT

  1) a or n are not integer
  2) type of a is larger than SYSTEM.ADDRESS

LSH(x,n)

ACCEPT

  1) For integer types, number of significant bits is taken from the
     first argument.  Bits above this limit are cleared.  Test
     positive, negative, and zero n.  Shift with ABS(n) larger than
     bits in x is undefined.
  2) LSH(char,n) and LSH(longchar) for +-0
  3) LSH(byte,n) for +-0

REJECT

  1) some other scalar type, e.g. x being REAL 


ROT(x,n)

ACCEPT

  1) For integer types, number of significant bits is taken from the
     first argument.  Bits above this limit wrap around.  Test
     positive, negative, and zero n.  Shift with ABS(n) larger than
     bits in x is undefined.
  2) ROT(char,n) and ROT(longchar) for +-0
  3) ROT(byte,n) for +-0

REJECT

  1) some other scalar type, e.g. x being REAL 


VAL(T,x)

ACCEPT

  1) VAL(REAL,longint)
  2) VAL(LONGINT,real)
  3) VAL(SET,longint)
  4) VAL(LONGINT,set)

REJECT

  1) size of T and x differ


GET(a,v)

ACCEPT

  1) Check that a local variable of a procedure can be read.

REJECT

  1) v has non-scalar type
  2) v is not a variable
  3) a is not integer
  4) type of a is larger than SYSTEM.ADDRESS


PUT(a,x)

ACCEPT

  1) Check that a local variable of a procedure can be written.

REJECT

  1) v has non-scalar type
  2) v is not a variable
  3) a is not integer
  4) type of a is larger than SYSTEM.ADDRESS


MOVE(a0,a1,n)

ACCEPT

  1) Check that a local variable of a procedure can be source or
     target.

REJECT

  1) a0, a1, or n is not integer
  2) type of a0 or a1 is larger than SYSTEM.ADDRESS


NEW(v,n)

ACCEPT

  1) v is PTR
  2) v is POINTER TO something

REJECT

  1) n is not integer
