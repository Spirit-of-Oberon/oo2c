<?xml version="1.0" encoding="ISO-8859-1"?>

<testcases profile="Baseline Testcases for Test Framework"
	   default-lang="O1">
  <test id="baseline1" type="reject" file="HOTBaselineReject1.Mod">
    Test file is <em>completely</em> empty.  The compiler should
    reject this invalid module.
  </test>
  
  <test id="baseline2" type="accept" file="HOTBaselineAccept1.Mod">
    Test case is an empty <code>MODULE</code>; such a module is
    useless, but technically legal.  The compiler should accept it.
  </test>
  
  <test id="baseline3" type="error" file="HOTBaselineError1.Mod">
    Module body has a single statement: <code>ASSERT(FALSE)</code>.
    The module should compile, and it should be possible to execute
    the exported procedure, but evaluation should raise an exception.
  </test>
  
  <test id="baseline4" type="run" file="HOTBaselineRun1.Mod">
    Module with a single, empty, procedure <code>Test</code>.  The
    module should compile and evaluate fine, but does not do anything
    at all.
  </test>
  
  <test id="baseline5" type="run" file="HOTBaselineOutput1.Mod"
	output="HOTBaselineOutput1.Ref">
    Testuation of the procedure <code>Test</code> prints the famous
    <code>Hello World!</code>, followed by a single newline character.
    Command execution should succeed, and the command's output should
    match the content of file <code>HOTBaselineOutput1.Ref</code>
    (with the exception of a possibly different newline character).
  </test>
</testcases>
